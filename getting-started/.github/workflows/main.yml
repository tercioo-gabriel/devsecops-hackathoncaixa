name: CI/CD Pipeline

on:
  push:
    branches:
      - des
      - prd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Native Executable with Maven
        run: |
          cd getting-started
          ./mvnw clean package -Pnative

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker Image
        run: |
          cd getting-started
          # A variável de ambiente GITHUB_REF contém a branch (ex: refs/heads/des)
          # A gente extrai a branch e usa como tag.
          BRANCH_NAME=${GITHUB_REF##*/}
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/quarkus-native:1.0-${BRANCH_NAME}
          docker build --no-cache --tag $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      
      - name: Deploy to Minikube
        if: github.ref == 'refs/heads/des' || github.ref == 'refs/heads/prd'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MINIKUBE_IP }}
          username: ${{ secrets.MINIKUBE_USERNAME }}
          key: ${{ secrets.MINIKUBE_SSH_KEY }}
          script: |
            # Acessa a pasta do projeto
            cd /home/tercioga/project/devsecops-hackathoncaixa
            # Aplica os manifestos do Kustomize dependendo da branch
            if [[ "${{ github.ref }}" == "refs/heads/des" ]]; then
              kubectl apply -k kubernetes/des
            elif [[ "${{ github.ref }}" == "refs/heads/prd" ]]; then
              kubectl apply -k kubernetes/prd
            fi
            # O kubectl irá buscar a imagem no Docker Hub automaticamente.